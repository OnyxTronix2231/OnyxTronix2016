// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2231.OnyxTronix2016.commands;

import java.text.DecimalFormat;

import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

import org.usfirst.frc2231.OnyxTronix2016.OI;
import org.usfirst.frc2231.OnyxTronix2016.Robot;
import org.usfirst.frc2231.OnyxTronix2016.subsystems.Shooter;

/**
 *
 */
public class ShooterSpeedByPOV extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public ShooterSpeedByPOV() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.shooter);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    }

    // Called repeatedly when this Command is scheduled to run
    boolean isChange = false;
    double speed = 0;
    DecimalFormat df = new DecimalFormat("#.#");
    
    protected void execute() {
    	speed = Robot.shooter.speed;
    	if(Robot.oi.getbuttonStick().getPOV() == 0 && !isChange && speed <= 1.0){
    		isChange = true;
    		speed += 0.1;
    	}else if(Robot.oi.getbuttonStick().getPOV() == 180 && !isChange && speed >= 0){
    		isChange = true;
    		speed -= 0.1;
    	}else {
    		isChange = false;
		}
    	
    	
    	String s = df.format(speed);
    	speed = Double.parseDouble(s);
    	speed = speed < 0 ? 0 : speed; //fix java bug    	
    	Robot.shooter.speed = speed;
    	System.out.println(speed);
    	SmartDashboard.putNumber("Speed Of Shooting Motors", speed);
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return false;
    }

    
    // Called once after isFinished returns true
    protected void end() {
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
}
